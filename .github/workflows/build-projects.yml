name: tehw0lf frontend and portfolio library pipeline

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.5.0]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch
        run: git fetch --no-tags --prune --depth=5 origin master
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Cache .pnpm-store
        uses: actions/cache@v1
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Enable pre and post scripts
        run: pnpm config set enable-pre-post-scripts true
      - name: Install packages
        run: pnpm install --frozen-lockfile
      - name: Lint
        run: pnpm affected:lint
      - name: Test
        run: pnpm affected:test
      - name: Build
        run: pnpm affected:build
      - name: Build library schematics for contact-form
        run: |
          cd libs/contact-form
          pnpm build
      - name: Build library schematics for git-portfolio
        run: |
          cd libs/git-portfolio
          pnpm build
      - name: Build library schematics for wordlist-generator
        run: |
          cd libs/wordlist-generator
          pnpm build
      - name: Run scully
        run: pnpm scully
      - name: Check if published git portfolio library version is outdated
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "portfolio_latest_version=$(pnpm view @tehw0lf/git-portfolio .dist-tags.latest)" >> $GITHUB_ENV
          echo "portfolio_package_version=$(jq -r ".version" dist/libs/git-portfolio/package.json)" >> $GITHUB_ENV
      - name: Publish library to npm registry if local package is newer
        if: ${{ github.event_name == 'push' && env.portfolio_latest_version != env.portfolio_package_version }}
        run: |
          pnpm publish dist/libs/git-portfolio --access public --dry-run
          pnpm publish dist/libs/git-portfolio --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Check if published wordlist generator library version is outdated
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "wordlist_generator_latest_version=$(pnpm view @tehw0lf/wordlist-generator .dist-tags.latest)" >> $GITHUB_ENV
          echo "wordlist_generator_package_version=$(jq -r ".version" dist/libs/wordlist-generator/package.json)" >> $GITHUB_ENV
      - name: Publish library to npm registry if local package is newer
        if: ${{ github.event_name == 'push' && env.wordlist_generator_latest_version != env.wordlist_generator_package_version }}
        run: |
          pnpm publish dist/libs/wordlist-generator --access public --dry-run
          pnpm publish dist/libs/wordlist-generator --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Check if published contact-form library version is outdated
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "contact_form_latest_version=$(pnpm view @tehw0lf/contact-form .dist-tags.latest)" >> $GITHUB_ENV
          echo "contact_form_package_version=$(jq -r ".version" dist/libs/contact-form/package.json)" >> $GITHUB_ENV
      - name: Publish library to npm registry if local package is newer
        if: ${{ github.event_name == 'push' && env.contact_form_latest_version != env.contact_form_package_version }}
        run: |
          pnpm publish dist/libs/contact-form --access public --dry-run
          pnpm publish dist/libs/contact-form --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Prepare frontend deployment
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "$SSH_KEY" > ssh_key
          echo "$SSH_PASS" > ssh_pass
          chmod 0600 ssh_key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_PASS: ${{ secrets.SSH_PASS }}
      - name: Deploy frontend
        if: ${{ github.event_name == 'push' }}
        run: |
          sshpass -f ssh_pass -P 'Enter passphrase' ssh -i ssh_key -p $PORT -o StrictHostKeyChecking=no $USER@$HOST "find /home/$USER/public_html/ -type f -name \"[^.]*\" -delete" && sshpass -f ssh_pass -P 'Enter passphrase' scp -i ssh_key -P $PORT -o StrictHostKeyChecking=no -rp dist/static/* $USER@$HOST:/home/$USER/public_html/
          rm ssh_*
        env:
          HOST: tehwol.fi
          PORT: 3695
          USER: tehwolfi
